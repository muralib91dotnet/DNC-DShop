#Gateway ApiUrl
@apiUrl = http://localhost:55502
@identityServiceUrl = http://localhost:55506
@adminAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJjNDQyYmU0NzBlNWQ0OGQ5OTJhZTBiNTJlOWRmMDRlNSIsInVuaXF1ZV9uYW1lIjoiYzQ0MmJlNDcwZTVkNDhkOTkyYWUwYjUyZTlkZjA0ZTUiLCJqdGkiOiIwNzdiYzU0YS01MmNmLTRmNTUtYmFlZi0wYjRmNzZmYjEwMmMiLCJpYXQiOiIxNTk1MTgzMjIzNTE2IiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoiYWRtaW4iLCJuYmYiOjE1OTUxODMyMjMsImV4cCI6MTU5NTE4NTAyMywiaXNzIjoiZHNob3AtaWRlbnRpdHktc2VydmljZSJ9.m_LvEHXu8weGLJWvh600SfHc7ahPfLMFSNVhG5AKfg0
@refreshToken = xxxxxxxxxxxxxxxxxx
@operationId = xxxxxxxxxxxxxxxxxx
@productId = 785234bf-13be-477d-b8a4-b9fd71c09e88
@customerId = d9964eeb-8602-4553-bc09-0309c3f9ee73
@orderId = 916e9b57-09e4-4fc5-9e60-f35448a96b08

# ================= OPERATION DETAILS ======================= #

### Whenever you send HTTP POST/PUT/DELETE request, you can verify whether the operation succeded or not by updating @operationId parameter above
### The operationId is a part of the response returned from the API and can be found under X-Operation: operations/{{operationId}} custom header
GET {{apiUrl}}/operations/{{operationId}}

# ================= IDENTITY SERVICE ======================= #

### Sign up as admin
POST {{identityServiceUrl}}/sign-up
content-type: application/json

{
	"email": "dshop-admin@mailinator.com",
	"password": "secret",
	"role": "admin"
}

### Sign in as admin
POST {{identityServiceUrl}}/sign-in
content-type: application/json

{
	"email": "dshop-admin@mailinator.com",
	"password": "secret"
}

# Once authenticated, copy the obtained accessToken and update the @adminAccessToken parameter above.

# ================= API GATEWAY ======================= #

### Create as many unique (by name) products as needed
POST {{apiUrl}}/products
authorization: Bearer {{adminAccessToken}}
content-type: application/json

{
	"name": "laptop",
	"description": "wishlist laptop",
	"vendor": "dell",
	"price": 2400,
	"quantity": 4
}

### Get products list
GET {{apiUrl}}/products?Page=1&Result=10

### Get product details by updating @productId parameter above
GET {{apiUrl}}/products/{{productId}}
authorization: Bearer {{adminAccessToken}}

### Update a product if needed
PUT {{apiUrl}}/products/{{productId}}
authorization: Bearer {{adminAccessToken}}
content-type: application/json

{
	"name": "My product updated",
	"description": "My product updated description",
	"price": 3500,
	"quantity": 15
}

### Delete a product if needed
DELETE {{apiUrl}}/products/{{productId}}
authorization: Bearer {{adminAccessToken}}

### Browse customers (if exist)
GET {{apiUrl}}/customers?Page=1&Result=10
authorization: Bearer {{adminAccessToken}}

### Get a customer account details
GET {{apiUrl}}/customers/{{customerId}}
authorization: Bearer {{adminAccessToken}}

# ================= USER WORKFLOW ======================= #
@userAccessToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkOTk2NGVlYjg2MDI0NTUzYmMwOTAzMDljM2Y5ZWU3MyIsInVuaXF1ZV9uYW1lIjoiZDk5NjRlZWI4NjAyNDU1M2JjMDkwMzA5YzNmOWVlNzMiLCJqdGkiOiI2NTRkYzYxZi05MGYxLTQ0ZTUtOGJhYi0xODg0ZGRkYjMwMWEiLCJpYXQiOiIxNTk1MTg0NDUyNTkwIiwiaHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS93cy8yMDA4LzA2L2lkZW50aXR5L2NsYWltcy9yb2xlIjoidXNlciIsIm5iZiI6MTU5NTE4NDQ1MiwiZXhwIjoxNTk1MTg2MjUyLCJpc3MiOiJkc2hvcC1pZGVudGl0eS1zZXJ2aWNlIn0.Kbs1f-P6G_loLO5ecenEjRbgwcdbO8L0A-j23HRaeTA
### Sign up as user
POST {{identityServiceUrl}}/sign-up
content-type: application/json

{
	"email": "dshop-user@mailinator.com",
	"password": "secret",
	"role": "user"
}

### Sign in as user
POST {{identityServiceUrl}}/sign-in
content-type: application/json

{
	"email": "dshop-user@mailinator.com",
	"password": "secret"
}

# Once authenticated, copy the obtained accessToken and update the @adminAccessToken parameter above

### Create a customer account
POST {{apiUrl}}/customers
authorization: Bearer {{userAccessToken}}
content-type: application/json

{
	"firstName": "John",
	"lastName": "Kowalski",
	"address": "My Street 01/02, My City",
	"country": "My Country"
}

### Add some products to your cart.
POST {{apiUrl}}/cart/items
authorization: Bearer {{userAccessToken}}
content-type: application/json

{
	"productId": "{{productId}}",
	"quantity": 1
}

### Get your shopping cart
GET {{apiUrl}}/cart
authorization: Bearer {{userAccessToken}}

### Delete a product from your cart if needed
DELETE {{apiUrl}}/cart/items/{{productId}}
authorization: Bearer {{adminAccessToken}}

### Clear cart
DELETE {{apiUrl}}/cart
authorization: Bearer {{adminAccessToken}}

### Create a new order
POST {{apiUrl}}/orders
authorization: Bearer {{userAccessToken}}
content-type: application/json

{
}

### Get your orders list
GET {{apiUrl}}/orders
authorization: Bearer {{userAccessToken}}

### Get your order details by updating @orderId parameter above
GET {{apiUrl}}/orders/{{orderId}}
authorization: Bearer {{adminAccessToken}}

### Complete an order (only works for new orders with status "created")
POST {{apiUrl}}/orders/{{orderId}}/approve
authorization: Bearer {{adminAccessToken}}
content-type: application/json

{
}

### Complete an order (only works for new orders with status "approved")
POST {{apiUrl}}/orders/{{orderId}}/complete
authorization: Bearer {{userAccessToken}}
content-type: application/json

{
}

### Cancel an order if needed (only works for new orders with status "created")
DELETE {{apiUrl}}/orders/{{orderId}}
authorization: Bearer {{adminAccessToken}}

# ================= IDENTITY SERVICE ======================= #

### Get your identity
GET http://localhost:5002/me
authorization: Bearer {{adminAccessToken}}

### Change password
PUT http://localhost:5002/me/password
authorization: Bearer {{adminAccessToken}}
content-type: application/json

{
	"currentPassword": "secret",
	"newPassword": "very_secret"
}

### Generate a new access token by updating @refreshToken parameter above
POST http://localhost:5002/access-tokens/{{refreshToken}}/refresh
content-type: application/json

{
}

### Revoke a current access token
POST http://localhost:5002/access-tokens/revoke
authorization: Bearer {{adminAccessToken}}
content-type: application/json

{
}

### Revoke a current refresh token
POST http://localhost:5002/refresh-tokens/{{refreshToken}}/revoke
authorization: Bearer {{adminAccessToken}}
content-type: application/json

{
}


# After following above work-flow to create user with roles, customer, order, products
# Try running discount rest file from Discounts API folder, will create discounts-service MongoDb with daata